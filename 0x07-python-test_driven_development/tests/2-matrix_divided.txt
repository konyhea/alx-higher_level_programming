ow to use matrix_divided
=========================

`` def matrix_divided(matrix, div) `` returns a new matrix that is a copy of matrix divided by div

::
        >>> matrix_divided = __import__('2-matrix_divided').matrix_divided
        >>> matrix = [
        ... [1, 2, 3],
        ... [4, 5, 6]
        ... ]
        >>> print(matrix_divided(matrix, 3))
        [[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

handling with floating numbers

::

        >>> matrix = [
        ... [1, 2, 3],
        ... ["a", 5, 6]
        ... ]
        >>> print(matrix_divided(matrix, 2))
        Traceback (most recent call last):
        TypeError: matrix must be a matrix (list of lists) of integers/floats

::
        >>> matrix = [
        ... [11, 2.11, 3.11],
        ... [4, 5.11, .116]
        ... ]
        >>> print(matrix_divided(matrix, 2.59))
        [[4.25, 0.81, 1.2], [1.54, 1.97, 0.04]]

::
        >>> matrix = [
        ... [1, 2, 3],
        ... [9.5, 5, 6]
        ... ]
        >>> print(matrix_divided(matrix, 1.5))
        [[0.67, 1.33, 2.0], [6.33, 3.33, 4.0]]


        >>> print(matrix_divided(matrix, 2))
        [[0.5, 1.0, 1.5], [4.75, 2.5, 3.0]]

        >>> print(matrix_divided(matrix))
        Traceback (most recent call last):
        TypeError: matrix_divided() missing 1 required positional argument: 'div'


        >>> print(matrix_divided())
        Traceback (most recent call last):
        TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'


::
        >>> matrix = None
        >>> print(matrix_divided(matrix, 2.59))
        Traceback (most recent call last):
        TypeError: matrix must be a matrix (list of lists) of integers/floats

        >>> matrix = "list"
        >>> print(matrix_divided(matrix, 1))
        Traceback (most recent call last):
        TypeError: matrix must be a matrix (list of lists) of integers/floats

        >>> matrix = [[]]
        >>> print(matrix_divided(matrix, 1))
        [[]]


        >>> matrix = [1, 2, 3]
        >>> print(matrix_divided(matrix, 1))
        Traceback (most recent call last):
        TypeError: matrix must be a matrix (list of lists) of integers/floats


checking the row length
        >>> matrix = [
        ... [1, 2, 3, 4],
        ... [4, 5, 6]
        ... ]
        >>> print(matrix_divided(matrix, 1))
        Traceback (most recent call last):
        TypeError: Each row of the matrix must have the same size


::
        >>> matrix = []
        >>> print(matrix_divided(matrix, 2.59))
        Traceback (most recent call last):
        IndexError: list index out of range


Handling divisors

when div is not an integer or float

::
        >>> matrix = [
        ... [1.11, 2.11, 3.11],
        ... [4.1, 5.11, .116]
        ... ]
        >>> print(matrix_divided(matrix, 'a'))
        Traceback (most recent call last):
        TypeError: div must be a number



        >>> print(matrix_divided(matrix, [1, 2, 3]))
        Traceback (most recent call last):
        TypeError: div must be a number


::
        >>> matrix = [
        ... [1, 2, 3],
        ... [4, 5, 6]
        ... ]
        >>> print(matrix_divided(matrix, 0))
        Traceback (most recent call last):
        ZeroDivisionError: division by zero


